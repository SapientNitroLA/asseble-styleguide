/**
 *
 * @title Primary Colors
 *
 */
.sugar-example :root { /* Headlines */ /* Links */
}
/**
 *
 * @title Secondary Colors
 *
 */
/**
 *
 * @title Variables
 *
 */
.sugar-example :root { /* Used for form-type elements */
}
/**
 *
 * @title Bordered element
 * @description Grey backdrop for an element with borders
 * @usage @extend %backdrop;
 *
 */
.sugar-example .note {
    background-color: hsla(39,53%,80%,1);
    border: 1px solid #E3CDA4;
    border-radius: 5px;
}
/**
 * @title Retina Image
 * @description Insert to render retina background image on element
 * @usage .image-2x( $image, $width, $height );
 * @defaultHeight 50px
 * @defaultWidth 100px
 *
 */
@mixin image-2x($image, $width: 100px, $height: 50px) {
        @media (min--moz-device-pixel-ratio: 1.3),
             (-webkit-min-device-pixel-ratio: 1.3),
             (min-device-pixel-ratio: 1.3),
             (min-resolution: 1.3dppx) {
        background-image: url(../styles/config/$image);
        background-size: $width $height;
    }
}
/**
 * @title Font Families
 */
.sugar-example :root { /*For displaying labels and code*/
}
.sugar-example h1, .sugar-example h3 {
    font-family: 'Arvo', Georgia;
    color: #703030;
    font-weight: 700;
}
/* Here's a single line comment */
.sugar-example h2, .sugar-example h4 {
    font-family: 'Arvo', Georgia;
    color: #C77966;
    font-weight: 400;
}
.sugar-example h5 {
    font-family: 'Roboto Mono', 'Monospace';
    color: #7E827A;
}
.sugar-example code {
    font-family: 'Roboto Mono', 'Monospace';
    font-weight: normal;
    background: #C77966;
    border-radius: 3px;
    padding: 3px 5px;
    display: inline-block;
    font-size: 12px;
    line-height: 16px;
    line-height: 1rem;
    vertical-align: top;
    color: white;
}
.sugar-example h1, .sugar-example h3 {
}
.sugar-example h2, .sugar-example h4 {
}
.sugar-example h5 {
}
.sugar-example p {
    line-height: 27.2px;
    line-height: 1.7rem;
}
.sugar-example code {
}
.sugar-example pre {
    text-align: left;
    background-color: #703030;
    color: white;
    padding: 5px;
    border-radius: 3px;
}
.sugar-example b {
    font-family: 'Arvo', Georgia;
    font-weight: 700;
}
.sugar-example a,
.sugar-example a:visited {
    color: #7E827A
}
.sugar-example a:hover,
    .sugar-example a:focus,
    .sugar-example a:active,
    .sugar-example a:visited:hover,
    .sugar-example a:visited:focus,
    .sugar-example a:visited:active {
 color: #703030;
}
/**
 * @title Button
 * @modifier .cta primary coloring
 * @state :hover transition animation on hover
 *
 * @example <a class="btn" href="#">a.btn</a>
 *
 * @example <button class="btn cta">button.btn.cta</button>
 *
 */
.sugar-example a.btn,
.sugar-example .btn,
.sugar-example button {
    font-family: 'Helvetica', Arial;
    text-decoration: none;
    border: 1px solid #7E827A;
    border-radius: 3px;
    padding: 8px 15px;
    cursor: pointer;
    color: #7E827A;
    font-size: 16px
}
.sugar-example a.btn:focus,
    .sugar-example a.btn:active,
    .sugar-example a.btn:hover,
    .sugar-example .btn:focus,
    .sugar-example .btn:active,
    .sugar-example .btn:hover,
    .sugar-example button:focus,
    .sugar-example button:active,
    .sugar-example button:hover {
 color: #2F343B;
}
.sugar-example a.cta,
.sugar-example .cta,
.sugar-example button {

    background-color: #7E827A;
    color: white
}
.sugar-example a.cta:focus,
    .sugar-example a.cta:active,
    .sugar-example a.cta:hover,
    .sugar-example .cta:focus,
    .sugar-example .cta:active,
    .sugar-example .cta:hover,
    .sugar-example button:focus,
    .sugar-example button:active,
    .sugar-example button:hover {
 background-color: #2F343B;
 border-color: #2F343B;
 color: white;
}
.sugar-example body {
    font-family: 'Helvetica', Arial;
    color: #333;
    margin: 0;
}
.sugar-example ul, .sugar-example ol {
    margin: 0;
}
.sugar-example section {
    padding: 0 15px;
}
@media (min-width: 745px) {
.sugar-example main {
    text-align: center;
}
.sugar-example section {
    text-align: left;
    margin: 50px auto;
    width: 100%;
    max-width: 715px;
}
}
.sugar-example nav {
    background-color: #E3CDA4;
    padding: 15px;
    overflow: hidden;
}
.sugar-example nav h1 {
    color: #2F343B;
    display: inline-block;
    margin: 4px;
}
.sugar-example nav a {
    display: block;
}
.sugar-example nav ul {
    float: right;
}
.sugar-example nav ul li {
    display: inline-block;
}
.sugar-example nav a img {
    width: 10px;
}
/**
 *
 * @title Feature
 * @description Used for listing chronological content. Numbers hide in small viewport
 * @example
 * <div class="feature">
 *  <div class="feature-item">
 *   <h3>Title</h3>
 *   <p>Lorem Ipsum</p>
 *  </div>
 *  <div class="feature-item">
 *   <h3>Title</h3>
 *   <p>Lorem Ipsum</p>
 *  </div>
 * </div>
 *
 */
.sugar-example .feature-item {
    padding: 15px;
    text-align: center;
    vertical-align: top;
}
@media (min-width: 745px) {
.sugar-example .feature {
    width: 100%;
    overflow: hidden;
}
.sugar-example .feature-item {
    counter-increment: section;
    text-align: left;
    padding-left: 3rem
}
.sugar-example .feature-item h3 {
  margin-top: 0;
 }
.sugar-example .feature-item:before {
  content: counter(section);
  font-family: 'Roboto Mono', 'Monospace';
  font-size: 36px;
  color: #E3CDA4;
  margin-left: -3rem;
  position: absolute;
 }
}
/**
 *
 * @title Note
 * @description Used for any aside-type information, or alert boxes
 * @example
 * <p class="note">
 *  Lorem Ipsum
 * </p>
 * @example
 * <p class="note alert">
 *  Lorem Ipsum
 * </p>
 * @modifier .alert Signifies an important note
 *
 */
.sugar-example .note {
    padding: 15px;
    margin: 15px;
}
.sugar-example .alert {
    background-color: #C77966;
    color: white;
}
/*# sourceMappingURL=data:application/json;base64, */